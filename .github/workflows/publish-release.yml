name: Publish release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Get Release Version
        run: echo "VERSION=$((grep -w 'version' | cut -d= -f2) < gradle.properties | rev | cut --complement -d- -f1 | rev)" >> $GITHUB_ENV

      - name: Pre-Release Dependency Version Update
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          echo "Version: ${VERSION}"
          git checkout -b release-${VERSION}
          sed -i 's/ballerinaLangVersion=\(.*\)-SNAPSHOT/ballerinaLangVersion=\1/g' gradle.properties
          sed -i 's/ballerinaLangVersion=\(.*\)-[0-9]\{8\}-[0-9]\{6\}-.*$/ballerinaLangVersion=\1/g' gradle.properties
          git add gradle.properties
          git commit -m "Move dependencies to stable versions" || echo "No changes to commit"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          sed -i 's/version=\(.*\)-SNAPSHOT/version=\1/g' gradle.properties
          ./gradlew clean build
        env:
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}

      - name: Build the final Copybook tools package using Ballerina
        uses: ballerina-platform/ballerina-action/@2201.8.0
        with:
          args: pack ./copybook-tool
        env:
          JAVA_HOME: /usr/lib/jvm/default-jvm

      - name: Ballerina Central Push
        uses: ballerina-platform/ballerina-action/@2201.8.0
        with:
          args: push
        env:
          WORKING_DIR: ./copybook-tool
          BALLERINA_DEV_CENTRAL: false
          BALLERINA_STAGE_CENTRAL: false
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
          JAVA_HOME: /usr/lib/jvm/default-jvm
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_ACCESS_TOKEN }}

      - name: GitHub Release and Release Sync PR
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          gh release create v$VERSION --title "copybook-tools-v$VERSION"
          gh pr create --base main --title "[Automated] Sync main after $VERSION release" --body "Sync main after $VERSION release"
